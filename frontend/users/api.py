# frontend/users/api.py

from nicegui import ui
from frontend.common.api import get, post, put, delete, set_token


# === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ===
async def register_user(username: str, email: str, password: str):
    payload = {"username": username, "email": email, "password": password}
    resp = await post("/users/register/", json=payload)

    if not resp:
        ui.notify("‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.", color="negative")
        return None

    if resp.status_code in (200, 201):
        ui.notify("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è—Ç–∞ –±–µ—à–µ —É—Å–ø–µ—à–Ω–∞!")
        return resp.json()

    try:
        detail = resp.json().get("detail", resp.text)
    except Exception:
        detail = resp.text
    ui.notify(f"‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {detail}", color="negative")
    return None


# === –í—Ö–æ–¥ / –õ–æ–≥–∏–Ω ===
async def login_user(username: str, password: str):
    payload = {"username": username, "password": password}
    resp = await post("/users/login/", json=payload)

    if not resp:
        ui.notify("‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.", color="negative")
        return None

    if resp.status_code == 200:
        data = resp.json()
        token = data.get("access_token")
        if token:
            set_token(token)
            ui.notify("üîì –£—Å–ø–µ—à–µ–Ω –≤—Ö–æ–¥!")
        else:
            ui.notify("‚ö†Ô∏è –õ–∏–ø—Å–≤–∞ —Ç–æ–∫–µ–Ω –≤ –æ—Ç–≥–æ–≤–æ—Ä–∞ –Ω–∞ –ª–æ–≥–∏–Ω–∞.", color="warning")
        return data

    try:
        detail = resp.json().get("detail", resp.text)
    except Exception:
        detail = resp.text
    ui.notify(f"‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥: {detail}", color="negative")
    return None


# === –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ ===
async def get_users():
    resp = await get("/users/")
    if not resp:
        ui.notify("‚ö†Ô∏è –ù—è–º–∞ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.", color="negative")
        return []

    if resp.status_code == 200:
        return resp.json()

    ui.notify(f"‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å–ø–∏—Å—ä–∫–∞ —Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ ({resp.status_code})", color="negative")
    return []


# === –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ===
async def update_user(user_id: int, data: dict):
    """–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –ø–æ ID."""
    resp = await put(f"/users/{user_id}", json=data)

    if not resp:
        ui.notify("‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.", color="negative")
        return None

    if resp.status_code == 200:
        ui.notify("üìù –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        return resp.json()

    try:
        detail = resp.json().get("detail", resp.text)
    except Exception:
        detail = resp.text
    ui.notify(f"‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–∞ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è: {detail}", color="negative")
    return None


# === –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ===
async def delete_user(user_id: int):
    resp = await delete(f"/users/{user_id}")

    if not resp:
        ui.notify("‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.", color="negative")
        return None

    if resp.status_code == 200:
        ui.notify("üóëÔ∏è –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –±–µ—à–µ –∏–∑—Ç—Ä–∏—Ç —É—Å–ø–µ—à–Ω–æ.")
        return resp

    ui.notify(f"‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–æ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ: {resp.text}", color="negative")
    return resp


# === –°–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞ ===
async def change_password(user_id: int, old_password: str, new_password: str):
    payload = {"old_password": old_password, "new_password": new_password}
    resp = await put(f"/users/{user_id}/change-password", json=payload)

    if not resp:
        ui.notify("‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.", color="negative")
        return None

    if resp.status_code == 200:
        ui.notify("üîë –ü–∞—Ä–æ–ª–∞—Ç–∞ –µ –ø—Ä–æ–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return resp

    try:
        detail = resp.json().get("detail", resp.text)
    except Exception:
        detail = resp.text
    ui.notify(f"‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–∞ —Å–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞: {detail}", color="negative")
    return resp


# === –ü—Ä–æ—Ñ–∏–ª –Ω–∞ —Ç–µ–∫—É—â–∏—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ===
async def get_profile():
    resp = await get("/users/me")

    if not resp:
        ui.notify("‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.", color="negative")
        return None

    if resp.status_code == 200:
        return resp.json()

    ui.notify(f"‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª ({resp.status_code})", color="negative")
    return None


# === –ò–∑—Ö–æ–¥ ===
async def logout_user():
    set_token(None)
    ui.notify("üö™ –ò–∑–ª—è–∑–æ—Ö—Ç–µ –æ—Ç –ø—Ä–æ—Ñ–∏–ª–∞.")
